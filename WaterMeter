#include <wiringPi.h> //библиотека для работы с GPIO. распиновка на 26: https://klenzel.de/wp-content/uploads/2014/09/wiringpi.jpg
#include <stdio.h> // библиотека для вывода на экран
#include <my_global.h> // библиотека для работы с sql
#include <mysql.h>  // библиотека для работы с sql

//#define ButtonPin 3 //пин 22
#define ButtonPin 0 // это пин № 17 BCM GPIO

void finish_with_error(MYSQL *con)
        {
                fprintf(stderr, "%s\n", mysql_error(con));
                mysql_close(con);
                exit(1);
        }

int main(int argc, char **argv) //начало программы, зачем argv - не знаю
{

        delay(5000); //задержка при запуске для инициализации sql после ребута
        if(wiringPiSetup() == -1)               // инициализация wiringPi
                {                               //when initialize wiring failed,print messageto screen
                printf("setup wiringPi failed !");
                return 1;
                }

        MYSQL *con = mysql_init(NULL); // устанавливаем соединение с базой

        if (con == NULL)
                {
                fprintf(stderr, "%s\n", mysql_error(con));
                exit(1);
                }

        if (mysql_real_connect(con, "localhost", "pi", "Ural-_1983", "water_db", 0, NULL, 0) == NULL)
                {
                finish_with_error(con);
                }

        pinMode(ButtonPin, INPUT);              //ставим пин на ввод (будет получать землю, т.е., будет выдавать 0)
        pullUpDnControl(ButtonPin, PUD_UP);     //подтяжка пина

        int b;                                // задаем переменную b, которая будет фиксировать текущее значение пина (1 или 0), надо будет его фиксировать в файле на случай потери электроэнергии,
                                                //чтобы при следующем включении не прибавлялись лишние цифры)
        float f;                                // задаем переменную f для учета показаний счетчика

        FILE *k = fopen("/home/pi/c/file1.txt", "r"); // файл из которого читаем последнее значение счетчика
        fscanf(k,"%f",&f);                      // читаем значение и записываем его в переменную
        fclose(k);                              // закрываем файл

        FILE *bf = fopen("/home/pi/c/pin17-0.txt", "r"); // файл из которого читаем последнее значение сч$
        fscanf(bf,"%d",&b);                      // читаем значение и записываем его в переменную
        fclose(bf);                              // закрываем файл


//      printf("значение счетчика f=%f, пина b=%d\n", f, b);    // для отладки - проверка того, что значение присвоено

        while(1)                                //начало цикла считывания
              {
                if(digitalRead(ButtonPin) != b) //Если состояние пина не равно переменной b, то выполняем условие
                        {                               //начало условия
                        b=digitalRead(ButtonPin);       // меняем значение переменной b на текущее состояние пина (0 или 1) - было 0, стало 1 и наоборот

                        FILE *bf = fopen("/home/pi/c/pin17-0.txt", "w"); // файл из которого читаем последнее значение состояния пина, открываем для записи
                        fprintf(bf,"%d",b);                      // записываем состояние пина в файл
                        fclose(bf);                              // закрываем файл


                        f+=0.005;                               //прибавляем к переменной f 5 литров (0,005 м3)

//                      printf("прибавили 5 к счетчику f=%.3f, пин=%d\n", f,b);                //выводим значение переменной f $ для отладки - проверка прибавки 0,005

                        FILE *data = fopen("/home/pi/c/file1.txt", "w"); //открываем файл со значением счетчика для записи)
                        fprintf(data,"%.3f\n", f);  // записываем значение переменной f в файл (файл содержит только значение переменной
                        fclose(data); // закрываем файл

//                        FILE *w = fopen("/var/www/html/1.html", "w"); // открываем файл для показа на веб-странице для записи в него значения счетчика
//                        fprintf(w,"%.3f\n", f); // записываем значение
//                      fclose(w); //закрываем файл

                        char sql[400];
                        sprintf(sql, "INSERT INTO watermeter (datetime, value) VALUES(NOW(), %.3f)", f);

//                      printf("ушел запрос в mysql такой: %s\n", sql); // проверка задания переменной запроса
//                      printf("значение счетчика ушло такое: %.3f\n", f); //проверка значения переменной а

                        if (mysql_query(con, sql)) // выполняется запрос, сформированный из переменной
                                {
                                finish_with_error(con);
                                }

                        }                               //конец условия
                delay(1000);                            //задержка в 1 секунду. Говорят, что за секунду 5 литров не выльется

              }                                               //конец цикла

        return 0;                                       //конец программы (типа того)
}                                                       //конец main
