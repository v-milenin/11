#include <wiringPi.h> //библиотека для работы с GPIO. распиновка на 26: https://klenzel.de/wp-content/uploads/2014/09/wiringpi.jpg
#include <stdio.h> // библиотека для вывода на экран
#include <my_global.h> // библиотека для работы с sql
#include <mysql.h>  // библиотека для работы с sql

//#define ButtonPin 3 //пин 22
#define ButtonPin 0 // это пин № 17 BCM GPIO

void finish_with_error(MYSQL *con) //делаем типа функцию, чтобы каждый раз не писать весь абзац
	{ //функция говорит об ошибке mysql
		fprintf(stderr, "%s\n", mysql_error(con));
		mysql_close(con);
		exit(1);
	}

int main(int argc, char **argv) //начало программы, зачем argv, argc - не знаю
{

	delay(5000); //задержка при запуске для инициализации sql после ребута
				//(при загрузке, судя по сислогам, крон при команде @reboot запускает прогу до
				// инициализации mysql, поэтому без задержки программа не соединяется с базой из
				//дает ошибку 1, т.е. выходит
	if(wiringPiSetup() == -1)		// инициализация wiringPi
        	{                               //when initialize wiring failed,print messageto screen
        	printf("setup wiringPi failed !");
        	return 1;
	       	}

	MYSQL *con = mysql_init(NULL); // устанавливаем соединение с базой
	MYSQL_RES *res;					// какая-то переменная склешная
        MYSQL_ROW row;				// тоже, но это важные штуки

	if (con == NULL) //что делать, если коннекта нет вроде, типа выдаем ошибку и выходим
		{
		fprintf(stderr, "%s\n", mysql_error(con));
		exit(1);
		}

	if (mysql_real_connect(con, "localhost", "username", "password", "water_db", 0, NULL, 0) == NULL) //соединяемся с базой
		{
		finish_with_error(con); // вот та функция из начала
		}

        pinMode(ButtonPin, INPUT);              //ставим пин на ввод (будет получать землю, т.е., будет выдавать 0)
	pullUpDnControl(ButtonPin, PUD_UP);     //подтяжка пина

	int b;					// задаем переменную b, которая будет фиксировать текущее значение пина (1 или 0), надо будет его фиксировать в файле на случай потери электроэнергии,
							//чтобы при следующем включении не прибавлялись лишние цифры)
	int a;					// переменная для учета целочисленных показаний в литрах (избежать погрешность)

	float f;				// задаем переменную f для учета показаний счетчика
	char rt[400];			// переменная для sql запроса
	sprintf(rt, "SELECT value FROM watermeter ORDER BY id DESC LIMIT 1"); //присваиваем переменной rt строку из кавычек

	FILE *bf = fopen("/home/pi/c/pin17-0.txt", "r"); // файл из которого читаем последнее значение пина (1 или 0)
        fscanf(bf,"%d",&b);                      // читаем значение и записываем его в переменную
        fclose(bf);                              // закрываем файл


	//	printf("значение счетчика f=%f, пина b=%d\n", f, b);	// для отладки - проверка того, что значение присвоено




//поехали считывать показания
	while(1)                                //начало цикла считывания
  	      {
			  //определяем состояние пина и сравниваем его с последним состоянием
                if(digitalRead(ButtonPin) != b) //Если состояние пина не равно переменной b, то выполняем условие
                        {                               //начало условия


						if (mysql_query(con, rt)) // выполняется запрос, сформированный из переменной rt
                                {
                                finish_with_error(con);
                                }
//считываем показание воды из таблицы
                        res = mysql_store_result(con); //непонять че
						//			printf("значение res %s\n", res); // для отладки
                        row = mysql_fetch_row(res); //присваиваем значение переменной row результат непонять чего
						//			printf ("row = %s\n", row[0]); // для отладки
                        a = atoi (row[0]); //переводим значение переменной row[0] в int и присваиваем его переменной а
						//			printf ("считали a = %d\n", a); // для отладки

						//			mysql_free_result(res); // Освобождаем память - неясно, надо или нет, но без этого работает
						//			mysql_close(con); // Закрываем соединение - неясно, надо или нет, но без этого работает

						
                        b=digitalRead(ButtonPin);       // меняем значение переменной b на текущее состояние пина (0 или 1) - было 0, стало 1 и наоборот

//записываем новое состояние пина в файл
						FILE *bf = fopen("/home/pi/c/pin17-0.txt", "w"); // файл из которого читаем последнее значение состояния пина, открываем для записи
						fprintf(bf,"%d",b);                      // записываем состояние пина в файл
						fclose(bf);                              // закрываем файл

//считаем воду в литрах и переводим в кубометры
                        a+=5;                               //прибавляем к переменной а 5 литров (0,005 м3)
						f=a/1000.000;						//переводим целочисленное значение a в значение переменной f с плавающей точкой с 3мя знаками после запятой

						//			printf("прибавили 5 к счетчику a=%d,  f=%.3f, пин=%d\n", a,f,b);                //выводим значение переменной f $ для отладки - проверка прибавки 0,005

//записываем новые значения в таблицу
						char sql[400]; //переменная для sql запроса
						sprintf(sql, "INSERT INTO watermeter (datetime, value, valuef) VALUES(NOW(), %d, %.3f)", a, f); //придаем переменной значение с текстом запроса (вносим в таблицу датувремя, значения переменных)

						//printf("ушел запрос в mysql такой: %s\n", sql); // проверка задания переменной запроса
						//printf("значение счетчика ушло такое: %.3f\n", f); //проверка значения переменной а

						
						if (mysql_query(con, sql)) // выполняется запрос, сформированный из переменной sql
							{
							finish_with_error(con);
							}
						
						//mysql_free_result(res);
						//mysql_close(con); // Закрываем соединение


						}                               //конец условия
						
// ждем секунду и поехали снова
				delay(1000);                            //задержка в 1 секунду. Говорят, что за секунду 5 литров не выльется

	      }                                               //конец цикла

        return 0;                                       //конец программы (типа того)
}                                                       //конец main
